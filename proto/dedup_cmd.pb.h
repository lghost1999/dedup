// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dedup_cmd.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dedup_5fcmd_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dedup_5fcmd_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dedup_5fcmd_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dedup_5fcmd_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dedup_5fcmd_2eproto;
namespace dedup {
class Fringerprint;
class FringerprintDefaultTypeInternal;
extern FringerprintDefaultTypeInternal _Fringerprint_default_instance_;
class QueryFringerprintRequest;
class QueryFringerprintRequestDefaultTypeInternal;
extern QueryFringerprintRequestDefaultTypeInternal _QueryFringerprintRequest_default_instance_;
class QueryFringerprintResponse;
class QueryFringerprintResponseDefaultTypeInternal;
extern QueryFringerprintResponseDefaultTypeInternal _QueryFringerprintResponse_default_instance_;
}  // namespace dedup
PROTOBUF_NAMESPACE_OPEN
template<> ::dedup::Fringerprint* Arena::CreateMaybeMessage<::dedup::Fringerprint>(Arena*);
template<> ::dedup::QueryFringerprintRequest* Arena::CreateMaybeMessage<::dedup::QueryFringerprintRequest>(Arena*);
template<> ::dedup::QueryFringerprintResponse* Arena::CreateMaybeMessage<::dedup::QueryFringerprintResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace dedup {

// ===================================================================

class Fringerprint :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dedup.Fringerprint) */ {
 public:
  Fringerprint();
  virtual ~Fringerprint();

  Fringerprint(const Fringerprint& from);
  Fringerprint(Fringerprint&& from) noexcept
    : Fringerprint() {
    *this = ::std::move(from);
  }

  inline Fringerprint& operator=(const Fringerprint& from) {
    CopyFrom(from);
    return *this;
  }
  inline Fringerprint& operator=(Fringerprint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Fringerprint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Fringerprint* internal_default_instance() {
    return reinterpret_cast<const Fringerprint*>(
               &_Fringerprint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Fringerprint& a, Fringerprint& b) {
    a.Swap(&b);
  }
  inline void Swap(Fringerprint* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Fringerprint* New() const final {
    return CreateMaybeMessage<Fringerprint>(nullptr);
  }

  Fringerprint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Fringerprint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Fringerprint& from);
  void MergeFrom(const Fringerprint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Fringerprint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dedup.Fringerprint";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dedup_5fcmd_2eproto);
    return ::descriptor_table_dedup_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHighFieldNumber = 1,
    kLowFieldNumber = 2,
  };
  // uint64 high = 1;
  void clear_high();
  ::PROTOBUF_NAMESPACE_ID::uint64 high() const;
  void set_high(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_high() const;
  void _internal_set_high(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 low = 2;
  void clear_low();
  ::PROTOBUF_NAMESPACE_ID::uint64 low() const;
  void set_low(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_low() const;
  void _internal_set_low(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:dedup.Fringerprint)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 high_;
  ::PROTOBUF_NAMESPACE_ID::uint64 low_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dedup_5fcmd_2eproto;
};
// -------------------------------------------------------------------

class QueryFringerprintRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dedup.QueryFringerprintRequest) */ {
 public:
  QueryFringerprintRequest();
  virtual ~QueryFringerprintRequest();

  QueryFringerprintRequest(const QueryFringerprintRequest& from);
  QueryFringerprintRequest(QueryFringerprintRequest&& from) noexcept
    : QueryFringerprintRequest() {
    *this = ::std::move(from);
  }

  inline QueryFringerprintRequest& operator=(const QueryFringerprintRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryFringerprintRequest& operator=(QueryFringerprintRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryFringerprintRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryFringerprintRequest* internal_default_instance() {
    return reinterpret_cast<const QueryFringerprintRequest*>(
               &_QueryFringerprintRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(QueryFringerprintRequest& a, QueryFringerprintRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryFringerprintRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryFringerprintRequest* New() const final {
    return CreateMaybeMessage<QueryFringerprintRequest>(nullptr);
  }

  QueryFringerprintRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryFringerprintRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryFringerprintRequest& from);
  void MergeFrom(const QueryFringerprintRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryFringerprintRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dedup.QueryFringerprintRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dedup_5fcmd_2eproto);
    return ::descriptor_table_dedup_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBitFieldNumber = 3,
    kFringerprintFieldNumber = 4,
    kRemoteFilenameFieldNumber = 1,
    kBackupTimeFieldNumber = 2,
  };
  // repeated uint64 bit = 3;
  int bit_size() const;
  private:
  int _internal_bit_size() const;
  public:
  void clear_bit();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bit(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_bit() const;
  void _internal_add_bit(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_bit();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 bit(int index) const;
  void set_bit(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_bit(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      bit() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_bit();

  // repeated .dedup.Fringerprint fringerprint = 4;
  int fringerprint_size() const;
  private:
  int _internal_fringerprint_size() const;
  public:
  void clear_fringerprint();
  ::dedup::Fringerprint* mutable_fringerprint(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dedup::Fringerprint >*
      mutable_fringerprint();
  private:
  const ::dedup::Fringerprint& _internal_fringerprint(int index) const;
  ::dedup::Fringerprint* _internal_add_fringerprint();
  public:
  const ::dedup::Fringerprint& fringerprint(int index) const;
  ::dedup::Fringerprint* add_fringerprint();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dedup::Fringerprint >&
      fringerprint() const;

  // string remote_filename = 1;
  void clear_remote_filename();
  const std::string& remote_filename() const;
  void set_remote_filename(const std::string& value);
  void set_remote_filename(std::string&& value);
  void set_remote_filename(const char* value);
  void set_remote_filename(const char* value, size_t size);
  std::string* mutable_remote_filename();
  std::string* release_remote_filename();
  void set_allocated_remote_filename(std::string* remote_filename);
  private:
  const std::string& _internal_remote_filename() const;
  void _internal_set_remote_filename(const std::string& value);
  std::string* _internal_mutable_remote_filename();
  public:

  // string backup_time = 2;
  void clear_backup_time();
  const std::string& backup_time() const;
  void set_backup_time(const std::string& value);
  void set_backup_time(std::string&& value);
  void set_backup_time(const char* value);
  void set_backup_time(const char* value, size_t size);
  std::string* mutable_backup_time();
  std::string* release_backup_time();
  void set_allocated_backup_time(std::string* backup_time);
  private:
  const std::string& _internal_backup_time() const;
  void _internal_set_backup_time(const std::string& value);
  std::string* _internal_mutable_backup_time();
  public:

  // @@protoc_insertion_point(class_scope:dedup.QueryFringerprintRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > bit_;
  mutable std::atomic<int> _bit_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dedup::Fringerprint > fringerprint_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr remote_filename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr backup_time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dedup_5fcmd_2eproto;
};
// -------------------------------------------------------------------

class QueryFringerprintResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dedup.QueryFringerprintResponse) */ {
 public:
  QueryFringerprintResponse();
  virtual ~QueryFringerprintResponse();

  QueryFringerprintResponse(const QueryFringerprintResponse& from);
  QueryFringerprintResponse(QueryFringerprintResponse&& from) noexcept
    : QueryFringerprintResponse() {
    *this = ::std::move(from);
  }

  inline QueryFringerprintResponse& operator=(const QueryFringerprintResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryFringerprintResponse& operator=(QueryFringerprintResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryFringerprintResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryFringerprintResponse* internal_default_instance() {
    return reinterpret_cast<const QueryFringerprintResponse*>(
               &_QueryFringerprintResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(QueryFringerprintResponse& a, QueryFringerprintResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryFringerprintResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryFringerprintResponse* New() const final {
    return CreateMaybeMessage<QueryFringerprintResponse>(nullptr);
  }

  QueryFringerprintResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryFringerprintResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryFringerprintResponse& from);
  void MergeFrom(const QueryFringerprintResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryFringerprintResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dedup.QueryFringerprintResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dedup_5fcmd_2eproto);
    return ::descriptor_table_dedup_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBitFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated uint64 bit = 2;
  int bit_size() const;
  private:
  int _internal_bit_size() const;
  public:
  void clear_bit();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bit(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_bit() const;
  void _internal_add_bit(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_bit();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 bit(int index) const;
  void set_bit(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_bit(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      bit() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_bit();

  // bool result = 1;
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:dedup.QueryFringerprintResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > bit_;
  mutable std::atomic<int> _bit_cached_byte_size_;
  bool result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dedup_5fcmd_2eproto;
};
// ===================================================================

class DedupService_Stub;

class DedupService : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline DedupService() {};
 public:
  virtual ~DedupService();

  typedef DedupService_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void QueryFringerprint(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::dedup::QueryFringerprintRequest* request,
                       ::dedup::QueryFringerprintResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(DedupService);
};

class DedupService_Stub : public DedupService {
 public:
  DedupService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  DedupService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~DedupService_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements DedupService ------------------------------------------

  void QueryFringerprint(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::dedup::QueryFringerprintRequest* request,
                       ::dedup::QueryFringerprintResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(DedupService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Fringerprint

// uint64 high = 1;
inline void Fringerprint::clear_high() {
  high_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Fringerprint::_internal_high() const {
  return high_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Fringerprint::high() const {
  // @@protoc_insertion_point(field_get:dedup.Fringerprint.high)
  return _internal_high();
}
inline void Fringerprint::_internal_set_high(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  high_ = value;
}
inline void Fringerprint::set_high(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_high(value);
  // @@protoc_insertion_point(field_set:dedup.Fringerprint.high)
}

// uint64 low = 2;
inline void Fringerprint::clear_low() {
  low_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Fringerprint::_internal_low() const {
  return low_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Fringerprint::low() const {
  // @@protoc_insertion_point(field_get:dedup.Fringerprint.low)
  return _internal_low();
}
inline void Fringerprint::_internal_set_low(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  low_ = value;
}
inline void Fringerprint::set_low(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_low(value);
  // @@protoc_insertion_point(field_set:dedup.Fringerprint.low)
}

// -------------------------------------------------------------------

// QueryFringerprintRequest

// string remote_filename = 1;
inline void QueryFringerprintRequest::clear_remote_filename() {
  remote_filename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& QueryFringerprintRequest::remote_filename() const {
  // @@protoc_insertion_point(field_get:dedup.QueryFringerprintRequest.remote_filename)
  return _internal_remote_filename();
}
inline void QueryFringerprintRequest::set_remote_filename(const std::string& value) {
  _internal_set_remote_filename(value);
  // @@protoc_insertion_point(field_set:dedup.QueryFringerprintRequest.remote_filename)
}
inline std::string* QueryFringerprintRequest::mutable_remote_filename() {
  // @@protoc_insertion_point(field_mutable:dedup.QueryFringerprintRequest.remote_filename)
  return _internal_mutable_remote_filename();
}
inline const std::string& QueryFringerprintRequest::_internal_remote_filename() const {
  return remote_filename_.GetNoArena();
}
inline void QueryFringerprintRequest::_internal_set_remote_filename(const std::string& value) {
  
  remote_filename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void QueryFringerprintRequest::set_remote_filename(std::string&& value) {
  
  remote_filename_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dedup.QueryFringerprintRequest.remote_filename)
}
inline void QueryFringerprintRequest::set_remote_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  remote_filename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dedup.QueryFringerprintRequest.remote_filename)
}
inline void QueryFringerprintRequest::set_remote_filename(const char* value, size_t size) {
  
  remote_filename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dedup.QueryFringerprintRequest.remote_filename)
}
inline std::string* QueryFringerprintRequest::_internal_mutable_remote_filename() {
  
  return remote_filename_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* QueryFringerprintRequest::release_remote_filename() {
  // @@protoc_insertion_point(field_release:dedup.QueryFringerprintRequest.remote_filename)
  
  return remote_filename_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void QueryFringerprintRequest::set_allocated_remote_filename(std::string* remote_filename) {
  if (remote_filename != nullptr) {
    
  } else {
    
  }
  remote_filename_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), remote_filename);
  // @@protoc_insertion_point(field_set_allocated:dedup.QueryFringerprintRequest.remote_filename)
}

// string backup_time = 2;
inline void QueryFringerprintRequest::clear_backup_time() {
  backup_time_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& QueryFringerprintRequest::backup_time() const {
  // @@protoc_insertion_point(field_get:dedup.QueryFringerprintRequest.backup_time)
  return _internal_backup_time();
}
inline void QueryFringerprintRequest::set_backup_time(const std::string& value) {
  _internal_set_backup_time(value);
  // @@protoc_insertion_point(field_set:dedup.QueryFringerprintRequest.backup_time)
}
inline std::string* QueryFringerprintRequest::mutable_backup_time() {
  // @@protoc_insertion_point(field_mutable:dedup.QueryFringerprintRequest.backup_time)
  return _internal_mutable_backup_time();
}
inline const std::string& QueryFringerprintRequest::_internal_backup_time() const {
  return backup_time_.GetNoArena();
}
inline void QueryFringerprintRequest::_internal_set_backup_time(const std::string& value) {
  
  backup_time_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void QueryFringerprintRequest::set_backup_time(std::string&& value) {
  
  backup_time_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dedup.QueryFringerprintRequest.backup_time)
}
inline void QueryFringerprintRequest::set_backup_time(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  backup_time_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dedup.QueryFringerprintRequest.backup_time)
}
inline void QueryFringerprintRequest::set_backup_time(const char* value, size_t size) {
  
  backup_time_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dedup.QueryFringerprintRequest.backup_time)
}
inline std::string* QueryFringerprintRequest::_internal_mutable_backup_time() {
  
  return backup_time_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* QueryFringerprintRequest::release_backup_time() {
  // @@protoc_insertion_point(field_release:dedup.QueryFringerprintRequest.backup_time)
  
  return backup_time_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void QueryFringerprintRequest::set_allocated_backup_time(std::string* backup_time) {
  if (backup_time != nullptr) {
    
  } else {
    
  }
  backup_time_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), backup_time);
  // @@protoc_insertion_point(field_set_allocated:dedup.QueryFringerprintRequest.backup_time)
}

// repeated uint64 bit = 3;
inline int QueryFringerprintRequest::_internal_bit_size() const {
  return bit_.size();
}
inline int QueryFringerprintRequest::bit_size() const {
  return _internal_bit_size();
}
inline void QueryFringerprintRequest::clear_bit() {
  bit_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 QueryFringerprintRequest::_internal_bit(int index) const {
  return bit_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 QueryFringerprintRequest::bit(int index) const {
  // @@protoc_insertion_point(field_get:dedup.QueryFringerprintRequest.bit)
  return _internal_bit(index);
}
inline void QueryFringerprintRequest::set_bit(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  bit_.Set(index, value);
  // @@protoc_insertion_point(field_set:dedup.QueryFringerprintRequest.bit)
}
inline void QueryFringerprintRequest::_internal_add_bit(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  bit_.Add(value);
}
inline void QueryFringerprintRequest::add_bit(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_bit(value);
  // @@protoc_insertion_point(field_add:dedup.QueryFringerprintRequest.bit)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
QueryFringerprintRequest::_internal_bit() const {
  return bit_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
QueryFringerprintRequest::bit() const {
  // @@protoc_insertion_point(field_list:dedup.QueryFringerprintRequest.bit)
  return _internal_bit();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
QueryFringerprintRequest::_internal_mutable_bit() {
  return &bit_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
QueryFringerprintRequest::mutable_bit() {
  // @@protoc_insertion_point(field_mutable_list:dedup.QueryFringerprintRequest.bit)
  return _internal_mutable_bit();
}

// repeated .dedup.Fringerprint fringerprint = 4;
inline int QueryFringerprintRequest::_internal_fringerprint_size() const {
  return fringerprint_.size();
}
inline int QueryFringerprintRequest::fringerprint_size() const {
  return _internal_fringerprint_size();
}
inline void QueryFringerprintRequest::clear_fringerprint() {
  fringerprint_.Clear();
}
inline ::dedup::Fringerprint* QueryFringerprintRequest::mutable_fringerprint(int index) {
  // @@protoc_insertion_point(field_mutable:dedup.QueryFringerprintRequest.fringerprint)
  return fringerprint_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dedup::Fringerprint >*
QueryFringerprintRequest::mutable_fringerprint() {
  // @@protoc_insertion_point(field_mutable_list:dedup.QueryFringerprintRequest.fringerprint)
  return &fringerprint_;
}
inline const ::dedup::Fringerprint& QueryFringerprintRequest::_internal_fringerprint(int index) const {
  return fringerprint_.Get(index);
}
inline const ::dedup::Fringerprint& QueryFringerprintRequest::fringerprint(int index) const {
  // @@protoc_insertion_point(field_get:dedup.QueryFringerprintRequest.fringerprint)
  return _internal_fringerprint(index);
}
inline ::dedup::Fringerprint* QueryFringerprintRequest::_internal_add_fringerprint() {
  return fringerprint_.Add();
}
inline ::dedup::Fringerprint* QueryFringerprintRequest::add_fringerprint() {
  // @@protoc_insertion_point(field_add:dedup.QueryFringerprintRequest.fringerprint)
  return _internal_add_fringerprint();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dedup::Fringerprint >&
QueryFringerprintRequest::fringerprint() const {
  // @@protoc_insertion_point(field_list:dedup.QueryFringerprintRequest.fringerprint)
  return fringerprint_;
}

// -------------------------------------------------------------------

// QueryFringerprintResponse

// bool result = 1;
inline void QueryFringerprintResponse::clear_result() {
  result_ = false;
}
inline bool QueryFringerprintResponse::_internal_result() const {
  return result_;
}
inline bool QueryFringerprintResponse::result() const {
  // @@protoc_insertion_point(field_get:dedup.QueryFringerprintResponse.result)
  return _internal_result();
}
inline void QueryFringerprintResponse::_internal_set_result(bool value) {
  
  result_ = value;
}
inline void QueryFringerprintResponse::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:dedup.QueryFringerprintResponse.result)
}

// repeated uint64 bit = 2;
inline int QueryFringerprintResponse::_internal_bit_size() const {
  return bit_.size();
}
inline int QueryFringerprintResponse::bit_size() const {
  return _internal_bit_size();
}
inline void QueryFringerprintResponse::clear_bit() {
  bit_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 QueryFringerprintResponse::_internal_bit(int index) const {
  return bit_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 QueryFringerprintResponse::bit(int index) const {
  // @@protoc_insertion_point(field_get:dedup.QueryFringerprintResponse.bit)
  return _internal_bit(index);
}
inline void QueryFringerprintResponse::set_bit(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  bit_.Set(index, value);
  // @@protoc_insertion_point(field_set:dedup.QueryFringerprintResponse.bit)
}
inline void QueryFringerprintResponse::_internal_add_bit(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  bit_.Add(value);
}
inline void QueryFringerprintResponse::add_bit(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_bit(value);
  // @@protoc_insertion_point(field_add:dedup.QueryFringerprintResponse.bit)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
QueryFringerprintResponse::_internal_bit() const {
  return bit_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
QueryFringerprintResponse::bit() const {
  // @@protoc_insertion_point(field_list:dedup.QueryFringerprintResponse.bit)
  return _internal_bit();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
QueryFringerprintResponse::_internal_mutable_bit() {
  return &bit_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
QueryFringerprintResponse::mutable_bit() {
  // @@protoc_insertion_point(field_mutable_list:dedup.QueryFringerprintResponse.bit)
  return _internal_mutable_bit();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dedup

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dedup_5fcmd_2eproto
